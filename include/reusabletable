// import React, { useEffect, useState } from "react";
// import { get,post } from "../../services/api-services";
// import { useParams } from "react-router-dom";
// import { Box, Button, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Grid, Card, Divider } from "@mui/material";
// import ModuleHeading from "../../component/ModuleHeading";
// import AccessTimeIcon from '@mui/icons-material/AccessTime';

// const InvoicePage = () => {
//     const [invoiceData, setInvoiceData] = useState(null);
//     const [paymentData, setPaymentData] = useState([]);
//     const { invoiceId } = useParams();


//     useEffect(() => {
//         const fetchData = async () => {
//             if (!invoiceId) return;

//             try {
//                 // First API call
//                 const url = `/UserPrograms?filter={"where":{"invoiceId":"${invoiceId}"},"include":["customer","invoice"]}`;
//                 const response = await get(url);

//                 if (response?.data) {
//                     const programData = response.data[0];
//                     setInvoiceData(programData);

//                     // Extract programId from the first response
//                     const programId = programData?.programId;
//                     const id = programData?.customerId;

//                     // If programId is available, make the second API call
//                     if (programId, id) {
//                         const url1 = `/Payments?filter={"where":{"customerId":"${id}","programId":"${programId}","invoiceId":"${invoiceId}"},"order":"paidOn"}`;
//                         const paymentResponse = await get(url1);

//                         if (paymentResponse?.data) {
//                             setPaymentData(paymentResponse.data);
//                         }
//                     }
//                 }
//             } catch (error) {
//                 console.error("Error fetching data:", error);
//             }
//         };

//         fetchData();
//     }, [invoiceId]);

//     const sendEmail = async () => {
//         if (!invoiceData || !invoiceData.customer || !invoiceData.invoice) {
//             alert("Unable to send email. Missing invoice or customer details.");
//             return;
//         }

//         try {
//             const payload = {
//                 to: invoiceData.customer.email,
//                 subject: `Invoice #WW241200${invoiceData.invoice.invoiceID}`,
//                 body: `Dear ${invoiceData.customer.name},\n\nPlease find the details of your invoice attached.\n\nThank you.`,
//                 invoiceId: invoiceData.invoice.invoiceID,
//             };

//             const response = await post("/sendEmail", payload);

//             if (response?.status === 200) {
//                 alert("Email sent successfully!");
//             } else {
//                 alert("Failed to send email. Please try again.");
//             }
//         } catch (error) {
//             console.error("Error sending email:", error);
//             alert("An error occurred while sending the email.");
//         }
//     };

//     if (!invoiceData) return <Typography align="center">Loading...</Typography>;

//     const { customer, invoice } = invoiceData;
//     const payment = paymentData[0] || {};
    
// // console.log(invoice,"djcjashfcudehfuedjhfewisufid")
// // console.log(invoice?.status, typeof invoice?.status);

//     return (
//         <Box
//             sx={{
//                 // fontFamily: "Arial, sans-serif",
//                 // border: "1px solid #ddd",
//                 // borderRadius: "8px",
//                 // background: "#f9f9f9",
//             }}
//         >
//             <ModuleHeading title="Invoice details" navigateTo="/admin/dashboard" />

//             {/* Invoice Details */}
//             <Card>
//                 <Box
//                     sx={{
//                         display: "flex",
//                         justifyContent: "space-between",
//                         alignItems: "center",
//                         padding: "16px",
//                         // marginBottom: "20px",
//                         backgroundColor: "#fff",
//                         // border: "1px solid #ddd",
//                         // borderRadius: "6px",
//                     }}
//                 >
//                     <Box>
//                         <Typography variant="subtitle1"><strong>Invoice:</strong>WW241200{invoice?.invoiceID}</Typography>
//                         <Typography variant="subtitle2"> {new Date(invoice?.createdAt).toLocaleDateString()}</Typography>
                      
//                         {invoice?.status === "Paid" ? (
//     <Typography variant="h6" color="green">✓ PAID</Typography>
// ) : (
//     <Typography variant="h6" color="red" className="w-400">
//         <AccessTimeIcon /> PAYMENT DUE 
//     </Typography>
// )}

//                     </Box>
//                     <Box textAlign="right">
//                         <img
//                             src={invoice?.purchaseProgram?.icon}
//                             alt="Program Icon"
//                         />
//                         <Typography variant="subtitle2"> <strong color="gray">Payment Due Date:</strong> {new Date(invoice?.dueDate).toLocaleDateString()}</Typography>

//                     </Box>
//                 </Box>
//                 <Divider />
//                 {/* Customer Details */}
//                 <Box
//                     sx={{
//                         display: "flex",
//                         justifyContent: "space-between",
//                         alignItems: "center",
//                         padding: "16px",
//                         // marginBottom: "20px",
//                         backgroundColor: "#fff",
//                         // border: "1px solid #ddd",
//                         // borderRadius: "6px",
//                     }}
//                 >
//                     <Box>
//                         <Typography variant="subtitle1"><strong>{customer?.name}</strong></Typography>
//                         <Typography variant="body2">Mobile: {customer?.mobile}</Typography>
//                         <Typography variant="body2">Email: {customer?.email}</Typography>
//                     </Box>
//                     <Box textAlign="right">
//                         <Typography variant="body2">WeightWonder™</Typography>
//                         <Typography variant="body2">+915588779933</Typography>
//                         <Typography variant="body2">info@weightwonder.com</Typography>
//                         <Typography variant="subtitle2">27-Noble Plaza, MP Nagar Bhopal</Typography>

//                     </Box>
//                 </Box>
//                 <Divider />


//                 {/* Program Details */}
//                 <Box
//                     sx={{
//                         display: "flex",
//                         justifyContent: "space-between",
//                         alignItems: "center",
//                         padding: "16px",
//                         // marginBottom: "20px",
//                         backgroundColor: "#fff",
//                         // border: "1px solid #ddd",
//                         // borderRadius: "6px",
//                     }}
//                 >
//                     <Box>
//                         <Typography variant="subtitle1"><strong>WeightWonder™{invoice?.purchaseProgram?.title}</strong></Typography>

//                     </Box>
//                     <Box textAlign="right">
//                         <Typography variant="body2">Price: ₹{invoice?.purchaseProgram?.price}</Typography>
//                     </Box>
//                 </Box>
//                 <Divider />


//                 <Box
//                     sx={{
//                         display: "flex",
//                         justifyContent: "space-between",
//                         alignItems: "center",
//                         padding: "16px",
//                         // marginBottom: "20px",
//                         backgroundColor: "#fff",
//                         // border: "1px solid #ddd",
//                         // borderRadius: "6px",
//                     }}
//                 >
//                     <Box>
//                         <Typography variant="h6"><strong>Net Amount{invoiceData?.price}</strong></Typography>

//                     </Box>
//                     <Box textAlign="right">
//                         <Typography variant="body2"><strong>₹{invoice?.purchaseProgram?.price}</strong> </Typography>
//                     </Box>
//                 </Box>
//                 <Divider />


//                 {/* Buttons */}

//                 <Box
//                     sx={{
//                         display: "flex",
//                         justifyContent: "space-between",
//                         padding: "16px",
//                     }}
//                 >
//                     <Box>
//                     </Box>
//                     <Box textAlign="right" sx={{ display: "flex", gap: 2, marginBottom: "20px" }}>
//                         <Button variant="outlined" color="primary">
//                             Print
//                         </Button>
//                         <Button variant="outlined" color="primary" onClick={sendEmail}>
//                             E-mail
//                         </Button>
//                     </Box>

//                 </Box>
//                 <Divider />

//             </Card >

//             {/* Payment Table */}
//             {/* <Paper elevation={2}  > */}
//             <Typography variant="h6" gutterBottom paddingTop={5}>
//                 <strong>Invoice Summary</strong>
//             </Typography>
//             <TableContainer>
//                 <Table
//                     sx={{
//                         border: '1px solid rgba(0, 0, 0, 0.12)',
//                     }}
//                 >
//                     <TableHead>
//                         <TableRow>
//                             <TableCell
//                                 sx={{
//                                     borderRight: '1px solid rgba(0, 0, 0, 0.12)',
//                                 }}
//                             >
//                                 Paid On
//                             </TableCell>
//                             <TableCell
//                                 sx={{
//                                     borderRight: '1px solid rgba(0, 0, 0, 0.12)',
//                                 }}
//                             >
//                                 Paid Amount
//                             </TableCell>
//                             <TableCell
//                                 sx={{
//                                     borderRight: '1px solid rgba(0, 0, 0, 0.12)',
//                                 }}
//                             >
//                                 Remaining Amount
//                             </TableCell>
//                             <TableCell
//                                 sx={{
//                                     borderRight: '1px solid rgba(0, 0, 0, 0.12)',
//                                 }}
//                             >
//                                 Payment Mode
//                             </TableCell>
//                             <TableCell>Comment</TableCell>
//                         </TableRow>
//                     </TableHead>
//                     <TableBody>
//                         <TableRow>
//                             <TableCell
//                                 sx={{
//                                     borderRight: '1px solid rgba(0, 0, 0, 0.12)',
//                                     borderBottom: '1px solid rgba(0, 0, 0, 0.12)',
//                                 }}
//                             >
//                                 {new Date(payment?.paidOn).toLocaleDateString()}
//                             </TableCell>
//                             <TableCell
//                                 sx={{
//                                     borderRight: '1px solid rgba(0, 0, 0, 0.12)',
//                                     borderBottom: '1px solid rgba(0, 0, 0, 0.12)',
//                                 }}
//                             >
//                                 ₹{payment?.amount || '0'}
//                             </TableCell>
//                             <TableCell
//                                 sx={{
//                                     borderRight: '1px solid rgba(0, 0, 0, 0.12)',
//                                     borderBottom: '1px solid rgba(0, 0, 0, 0.12)',
//                                 }}
//                             >
//                                 ₹{payment?.remainingAmount || '0'}
//                             </TableCell>
//                             <TableCell
//                                 sx={{
//                                     borderRight: '1px solid rgba(0, 0, 0, 0.12)',
//                                     borderBottom: '1px solid rgba(0, 0, 0, 0.12)',
//                                 }}
//                             >
//                                 {payment?.paymentMode || 'N/A'}
//                             </TableCell>
//                             <TableCell
//                                 sx={{
//                                     borderBottom: '1px solid rgba(0, 0, 0, 0.12)',
//                                 }}
//                             >
//                                 {payment?.comment || '-'}
//                             </TableCell>
//                         </TableRow>
//                     </TableBody>
//                 </Table>
//             </TableContainer>

//             {/* </Paper> */}
//         </Box >
//     );
// };

// export default InvoicePage;

// import React, { useEffect, useRef, useState } from "react";
// import { get, post } from "../../services/api-services";
// import { useParams } from "react-router-dom";
// import {
//     Box, Button, Typography, Table, TableBody, TableCell,
//     TableContainer, TableHead, TableRow, Card, Divider
// } from "@mui/material";
// import ModuleHeading from "../../component/ModuleHeading";
// import AccessTimeIcon from '@mui/icons-material/AccessTime';

// const InvoicePage = () => {
//     const [invoiceData, setInvoiceData] = useState(null);
//     const [paymentData, setPaymentData] = useState([]);
//     const { invoiceId } = useParams();
//     const printRef = useRef(); // Reference to the printable content

//     useEffect(() => {
//         const fetchData = async () => {
//             if (!invoiceId) return;

//             try {
//                 const url = `/UserPrograms?filter={"where":{"invoiceId":"${invoiceId}"},"include":["customer","invoice"]}`;
//                 const response = await get(url);

//                 if (response?.data) {
//                     const programData = response.data[0];
//                     setInvoiceData(programData);

//                     const programId = programData?.programId;
//                     const id = programData?.customerId;

//                     if (programId && id) {
//                         const url1 = `/Payments?filter={"where":{"customerId":"${id}","programId":"${programId}","invoiceId":"${invoiceId}"},"order":"paidOn"}`;
//                         const paymentResponse = await get(url1);

//                         if (paymentResponse?.data) {
//                             setPaymentData(paymentResponse.data);
//                         }
//                     }
//                 }
//             } catch (error) {
//                 console.error("Error fetching data:", error);
//             }
//         };

//         fetchData();
//     }, [invoiceId]);

//     const sendEmail = async () => {
//         if (!invoiceData || !invoiceData.customer || !invoiceData.invoice) {
//             alert("Unable to send email. Missing invoice or customer details.");
//             return;
//         }

//         try {
//             const payload = {
//                 to: invoiceData.customer.email,
//                 subject: `Invoice #WW241200${invoiceData.invoice.invoiceID}`,
//                 body: `Dear ${invoiceData.customer.name},\n\nPlease find the details of your invoice attached.\n\nThank you.`,
//                 invoiceId: invoiceData.invoice.invoiceID,
//             };

//             const response = await post("/sendEmail", payload);

//             if (response?.status === 200) {
//                 alert("Email sent successfully!");
//             } else {
//                 alert("Failed to send email. Please try again.");
//             }
//         } catch (error) {
//             console.error("Error sending email:", error);
//             alert("An error occurred while sending the email.");
//         }
//     };

//     const handlePrint = () => {
//         const content = printRef.current;
//         const printWindow = window.open("", "_blank", "width=800,height=600");
//         printWindow.document.write(`
//             <html>
//                 <head>
//                     <title>Invoice</title>
//                     <style>
//                         @media print {
//                             body {
//                                 font-family: Arial, sans-serif;
//                             }
//                         }
//                     </style>
//                 </head>
//                 <body>${content.outerHTML}</body>
//             </html>
//         `);
//         printWindow.document.close();
//         printWindow.focus();
//         printWindow.print();
//         printWindow.close();
//     };

//     if (!invoiceData) return <Typography align="center">Loading...</Typography>;

//     const { customer, invoice } = invoiceData;
//     const payment = paymentData[0] || {};

//     return (
//         <Box>
//             <ModuleHeading title="Invoice details" navigateTo="/admin/dashboard" />

//             {/* Printable Content */}
//             <Box ref={printRef}>
//                 <Card>
//                     <Box sx={{ display: "flex", justifyContent: "space-between", padding: "16px" }}>
//                         <Box>
//                             <Typography variant="subtitle1"><strong>Invoice:</strong> WW241200{invoice?.invoiceID}</Typography>
//                             <Typography variant="subtitle2">{new Date(invoice?.createdAt).toLocaleDateString()}</Typography>
//                             {invoice?.status === "Paid" ? (
//                                 <Typography variant="h6" color="green">✓ PAID</Typography>
//                             ) : (
//                                 <Typography variant="h6" color="red" className="w-400">
//                                     <AccessTimeIcon /> PAYMENT DUE
//                                 </Typography>
//                             )}
//                         </Box>
//                         <Box textAlign="right">
//                             <Typography variant="subtitle2">
//                                 <strong>Payment Due Date:</strong> {new Date(invoice?.dueDate).toLocaleDateString()}
//                             </Typography>
//                         </Box>
//                     </Box>
//                     <Divider />

//                     <Box sx={{ display: "flex", justifyContent: "space-between", padding: "16px" }}>
//                         <Box>
//                             <Typography variant="subtitle1"><strong>{customer?.name}</strong></Typography>
//                             <Typography variant="body2">Mobile: {customer?.mobile}</Typography>
//                             <Typography variant="body2">Email: {customer?.email}</Typography>
//                         </Box>
//                         <Box textAlign="right">
//                             <Typography variant="body2">WeightWonder™</Typography>
//                             <Typography variant="body2">+915588779933</Typography>
//                             <Typography variant="body2">info@weightwonder.com</Typography>
//                         </Box>
//                     </Box>
//                     <Divider />

//                     <Typography variant="h6" gutterBottom paddingTop={5}>
//                         <strong>Invoice Summary</strong>
//                     </Typography>
//                     {/* Payment Table */}
//                     <TableContainer>
//                         <Table>
//                             <TableHead>
//                                 <TableRow>
//                                     <TableCell>Paid On</TableCell>
//                                     <TableCell>Paid Amount</TableCell>
//                                     <TableCell>Remaining Amount</TableCell>
//                                     <TableCell>Payment Mode</TableCell>
//                                     <TableCell>Comment</TableCell>
//                                 </TableRow>
//                             </TableHead>
//                             <TableBody>
//                                 <TableRow>
//                                     <TableCell>{new Date(payment?.paidOn).toLocaleDateString()}</TableCell>
//                                     <TableCell>₹{payment?.amount || '0'}</TableCell>
//                                     <TableCell>₹{payment?.remainingAmount || '0'}</TableCell>
//                                     <TableCell>{payment?.paymentMode || 'N/A'}</TableCell>
//                                     <TableCell>{payment?.comment || '-'}</TableCell>
//                                 </TableRow>
//                             </TableBody>
//                         </Table>
//                     </TableContainer>
//                 </Card>
//             </Box>

//             {/* Buttons */}
//             <Box sx={{ display: "flex", justifyContent: "space-between", padding: "16px" }}>
//                 <Button variant="outlined" color="primary" onClick={handlePrint}>
//                     Print
//                 </Button>
//                 <Button variant="outlined" color="primary" onClick={sendEmail}>
//                     E-mail
//                 </Button>
//             </Box>
//         </Box>
//     );
// };

// export default InvoicePage;



import React, { useEffect, useState } from "react";
import { get, post } from "../../services/api-services";
import { useParams } from "react-router-dom";
import { 
    Box, Button, Typography, Table, TableBody, TableCell, 
    TableContainer, TableHead, TableRow, Card, Divider 
} from "@mui/material";
import ModuleHeading from "../../component/ModuleHeading";
import AccessTimeIcon from '@mui/icons-material/AccessTime';

const InvoicePage = () => {
    const [invoiceData, setInvoiceData] = useState(null);
    const [paymentData, setPaymentData] = useState([]);
    const { invoiceId } = useParams();

    useEffect(() => {
        const fetchData = async () => {
            if (!invoiceId) return;

            try {
                const url = `/UserPrograms?filter={"where":{"invoiceId":"${invoiceId}"},"include":["customer","invoice"]}`;
                const response = await get(url);

                if (response?.data) {
                    const programData = response.data[0];
                    setInvoiceData(programData);

                    const programId = programData?.programId;
                    const id = programData?.customerId;

                    if (programId && id) {
                        const url1 = `/Payments?filter={"where":{"customerId":"${id}","programId":"${programId}","invoiceId":"${invoiceId}"},"order":"paidOn"}`;
                        const paymentResponse = await get(url1);

                        if (paymentResponse?.data) {
                            setPaymentData(paymentResponse.data);
                        }
                    }
                }
            } catch (error) {
                console.error("Error fetching data:", error);
            }
        };

        fetchData();
    }, [invoiceId]);

    const sendEmail = async () => {
        if (!invoiceData || !invoiceData.customer || !invoiceData.invoice) {
            alert("Unable to send email. Missing invoice or customer details.");
            return;
        }

        try {
            const payload = {
                to: invoiceData.customer.email,
                subject: `Invoice #WW241200${invoiceData.invoice.invoiceID}`,
                body: `Dear ${invoiceData.customer.name},\n\nPlease find the details of your invoice attached.\n\nThank you.`,
                invoiceId: invoiceData.invoice.invoiceID,
            };

            const response = await post("/sendEmail", payload);

            if (response?.status === 200) {
                alert("Email sent successfully!");
            } else {
                alert("Failed to send email. Please try again.");
            }
        } catch (error) {
            console.error("Error sending email:", error);
            alert("An error occurred while sending the email.");
        }
    };

    const addPayment = () => {
        alert("Redirecting to Add Payment page...");
        // Add your logic to navigate to the Add Payment page or open a dialog
    };

    if (!invoiceData) return <Typography align="center">Loading...</Typography>;

    const { customer, invoice } = invoiceData;
    const payment = paymentData[0] || {};

    return (
        <Box>
            <ModuleHeading title="Invoice details" navigateTo="/admin/dashboard" />

            {/* Invoice Details */}
            <Card>
                <Box sx={{ display: "flex", justifyContent: "space-between", alignItems: "center", padding: "16px" }}>
                    <Box>
                        <Typography variant="subtitle1"><strong>Invoice:</strong> WW241200{invoice?.invoiceID}</Typography>
                        <Typography variant="subtitle2">{new Date(invoice?.createdAt).toLocaleDateString()}</Typography>
                      
                        {invoice?.status === "Paid" ? (
                            <Typography variant="h6" color="green">✓ PAID</Typography>
                        ) : (
                            <Typography variant="h6" color="red" className="w-400">
                                <AccessTimeIcon /> PAYMENT DUE
                            </Typography>
                        )}
                    </Box>
                    <Box textAlign="right">
                        <Typography variant="subtitle2">
                            <strong>Payment Due Date:</strong> {new Date(invoice?.dueDate).toLocaleDateString()}
                        </Typography>
                    </Box>
                </Box>
                <Divider />

                {/* Customer Details */}
                <Box sx={{ display: "flex", justifyContent: "space-between", padding: "16px" }}>
                    <Box>
                        <Typography variant="subtitle1"><strong>{customer?.name}</strong></Typography>
                        <Typography variant="body2">Mobile: {customer?.mobile}</Typography>
                        <Typography variant="body2">Email: {customer?.email}</Typography>
                    </Box>
                    <Box textAlign="right">
                        <Typography variant="body2">WeightWonder™</Typography>
                        <Typography variant="body2">+915588779933</Typography>
                        <Typography variant="body2">info@weightwonder.com</Typography>
                    </Box>
                </Box>
                <Divider />

                {/* Buttons */}
                <Box sx={{ display: "flex", justifyContent: "flex-end", padding: "16px", gap: 2 }}>
                    {invoice?.status === "Due" && (
                        <Button variant="contained" color="primary" onClick={addPayment}>
                            Add Payment
                        </Button>
                    )}
                    <Button variant="outlined" color="primary" onClick={sendEmail}>
                        E-mail
                    </Button>
                </Box>
            </Card>
        </Box>
    );
};

export default InvoicePage;
